# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

from . import _utilities
import typing
# Export this package's modules as members:
from .provider import *
from ._inputs import *

# Make subpackages available:
if typing.TYPE_CHECKING:
    import pulumi_tctest.address as __address
    address = __address
    import pulumi_tctest.api as __api
    api = __api
    import pulumi_tctest.apigateway as __apigateway
    apigateway = __apigateway
    import pulumi_tctest.as_ as __as_
    as_ = __as_
    import pulumi_tctest.audit as __audit
    audit = __audit
    import pulumi_tctest.audits as __audits
    audits = __audits
    import pulumi_tctest.availability as __availability
    availability = __availability
    import pulumi_tctest.cam as __cam
    cam = __cam
    import pulumi_tctest.cbs as __cbs
    cbs = __cbs
    import pulumi_tctest.ccn as __ccn
    ccn = __ccn
    import pulumi_tctest.cdh as __cdh
    cdh = __cdh
    import pulumi_tctest.cdn as __cdn
    cdn = __cdn
    import pulumi_tctest.cfs as __cfs
    cfs = __cfs
    import pulumi_tctest.ckafka as __ckafka
    ckafka = __ckafka
    import pulumi_tctest.clb as __clb
    clb = __clb
    import pulumi_tctest.cloud as __cloud
    cloud = __cloud
    import pulumi_tctest.cls as __cls
    cls = __cls
    import pulumi_tctest.config as __config
    config = __config
    import pulumi_tctest.container as __container
    container = __container
    import pulumi_tctest.cos as __cos
    cos = __cos
    import pulumi_tctest.cvm as __cvm
    cvm = __cvm
    import pulumi_tctest.cynosdb as __cynosdb
    cynosdb = __cynosdb
    import pulumi_tctest.dayu as __dayu
    dayu = __dayu
    import pulumi_tctest.dc as __dc
    dc = __dc
    import pulumi_tctest.dcx as __dcx
    dcx = __dcx
    import pulumi_tctest.dnat as __dnat
    dnat = __dnat
    import pulumi_tctest.dnats as __dnats
    dnats = __dnats
    import pulumi_tctest.dnspod as __dnspod
    dnspod = __dnspod
    import pulumi_tctest.eip as __eip
    eip = __eip
    import pulumi_tctest.eips as __eips
    eips = __eips
    import pulumi_tctest.eks as __eks
    eks = __eks
    import pulumi_tctest.elasticsearch as __elasticsearch
    elasticsearch = __elasticsearch
    import pulumi_tctest.emr as __emr
    emr = __emr
    import pulumi_tctest.eni as __eni
    eni = __eni
    import pulumi_tctest.enis as __enis
    enis = __enis
    import pulumi_tctest.gaap as __gaap
    gaap = __gaap
    import pulumi_tctest.ha as __ha
    ha = __ha
    import pulumi_tctest.image as __image
    image = __image
    import pulumi_tctest.instances as __instances
    instances = __instances
    import pulumi_tctest.key as __key
    key = __key
    import pulumi_tctest.kms as __kms
    kms = __kms
    import pulumi_tctest.mongodb as __mongodb
    mongodb = __mongodb
    import pulumi_tctest.monitor as __monitor
    monitor = __monitor
    import pulumi_tctest.mysql as __mysql
    mysql = __mysql
    import pulumi_tctest.nat as __nat
    nat = __nat
    import pulumi_tctest.nats as __nats
    nats = __nats
    import pulumi_tctest.placement as __placement
    placement = __placement
    import pulumi_tctest.postgresql as __postgresql
    postgresql = __postgresql
    import pulumi_tctest.privatedns as __privatedns
    privatedns = __privatedns
    import pulumi_tctest.protocol as __protocol
    protocol = __protocol
    import pulumi_tctest.redis as __redis
    redis = __redis
    import pulumi_tctest.reserved as __reserved
    reserved = __reserved
    import pulumi_tctest.route as __route
    route = __route
    import pulumi_tctest.scf as __scf
    scf = __scf
    import pulumi_tctest.security as __security
    security = __security
    import pulumi_tctest.sqlserver as __sqlserver
    sqlserver = __sqlserver
    import pulumi_tctest.ssl as __ssl
    ssl = __ssl
    import pulumi_tctest.ssm as __ssm
    ssm = __ssm
    import pulumi_tctest.subnet as __subnet
    subnet = __subnet
    import pulumi_tctest.tcaplus as __tcaplus
    tcaplus = __tcaplus
    import pulumi_tctest.tcr as __tcr
    tcr = __tcr
    import pulumi_tctest.tdmq as __tdmq
    tdmq = __tdmq
    import pulumi_tctest.tke as __tke
    tke = __tke
    import pulumi_tctest.user as __user
    user = __user
    import pulumi_tctest.vod as __vod
    vod = __vod
    import pulumi_tctest.vpc as __vpc
    vpc = __vpc
    import pulumi_tctest.vpn as __vpn
    vpn = __vpn
else:
    address = _utilities.lazy_import('pulumi_tctest.address')
    api = _utilities.lazy_import('pulumi_tctest.api')
    apigateway = _utilities.lazy_import('pulumi_tctest.apigateway')
    as_ = _utilities.lazy_import('pulumi_tctest.as_')
    audit = _utilities.lazy_import('pulumi_tctest.audit')
    audits = _utilities.lazy_import('pulumi_tctest.audits')
    availability = _utilities.lazy_import('pulumi_tctest.availability')
    cam = _utilities.lazy_import('pulumi_tctest.cam')
    cbs = _utilities.lazy_import('pulumi_tctest.cbs')
    ccn = _utilities.lazy_import('pulumi_tctest.ccn')
    cdh = _utilities.lazy_import('pulumi_tctest.cdh')
    cdn = _utilities.lazy_import('pulumi_tctest.cdn')
    cfs = _utilities.lazy_import('pulumi_tctest.cfs')
    ckafka = _utilities.lazy_import('pulumi_tctest.ckafka')
    clb = _utilities.lazy_import('pulumi_tctest.clb')
    cloud = _utilities.lazy_import('pulumi_tctest.cloud')
    cls = _utilities.lazy_import('pulumi_tctest.cls')
    config = _utilities.lazy_import('pulumi_tctest.config')
    container = _utilities.lazy_import('pulumi_tctest.container')
    cos = _utilities.lazy_import('pulumi_tctest.cos')
    cvm = _utilities.lazy_import('pulumi_tctest.cvm')
    cynosdb = _utilities.lazy_import('pulumi_tctest.cynosdb')
    dayu = _utilities.lazy_import('pulumi_tctest.dayu')
    dc = _utilities.lazy_import('pulumi_tctest.dc')
    dcx = _utilities.lazy_import('pulumi_tctest.dcx')
    dnat = _utilities.lazy_import('pulumi_tctest.dnat')
    dnats = _utilities.lazy_import('pulumi_tctest.dnats')
    dnspod = _utilities.lazy_import('pulumi_tctest.dnspod')
    eip = _utilities.lazy_import('pulumi_tctest.eip')
    eips = _utilities.lazy_import('pulumi_tctest.eips')
    eks = _utilities.lazy_import('pulumi_tctest.eks')
    elasticsearch = _utilities.lazy_import('pulumi_tctest.elasticsearch')
    emr = _utilities.lazy_import('pulumi_tctest.emr')
    eni = _utilities.lazy_import('pulumi_tctest.eni')
    enis = _utilities.lazy_import('pulumi_tctest.enis')
    gaap = _utilities.lazy_import('pulumi_tctest.gaap')
    ha = _utilities.lazy_import('pulumi_tctest.ha')
    image = _utilities.lazy_import('pulumi_tctest.image')
    instances = _utilities.lazy_import('pulumi_tctest.instances')
    key = _utilities.lazy_import('pulumi_tctest.key')
    kms = _utilities.lazy_import('pulumi_tctest.kms')
    mongodb = _utilities.lazy_import('pulumi_tctest.mongodb')
    monitor = _utilities.lazy_import('pulumi_tctest.monitor')
    mysql = _utilities.lazy_import('pulumi_tctest.mysql')
    nat = _utilities.lazy_import('pulumi_tctest.nat')
    nats = _utilities.lazy_import('pulumi_tctest.nats')
    placement = _utilities.lazy_import('pulumi_tctest.placement')
    postgresql = _utilities.lazy_import('pulumi_tctest.postgresql')
    privatedns = _utilities.lazy_import('pulumi_tctest.privatedns')
    protocol = _utilities.lazy_import('pulumi_tctest.protocol')
    redis = _utilities.lazy_import('pulumi_tctest.redis')
    reserved = _utilities.lazy_import('pulumi_tctest.reserved')
    route = _utilities.lazy_import('pulumi_tctest.route')
    scf = _utilities.lazy_import('pulumi_tctest.scf')
    security = _utilities.lazy_import('pulumi_tctest.security')
    sqlserver = _utilities.lazy_import('pulumi_tctest.sqlserver')
    ssl = _utilities.lazy_import('pulumi_tctest.ssl')
    ssm = _utilities.lazy_import('pulumi_tctest.ssm')
    subnet = _utilities.lazy_import('pulumi_tctest.subnet')
    tcaplus = _utilities.lazy_import('pulumi_tctest.tcaplus')
    tcr = _utilities.lazy_import('pulumi_tctest.tcr')
    tdmq = _utilities.lazy_import('pulumi_tctest.tdmq')
    tke = _utilities.lazy_import('pulumi_tctest.tke')
    user = _utilities.lazy_import('pulumi_tctest.user')
    vod = _utilities.lazy_import('pulumi_tctest.vod')
    vpc = _utilities.lazy_import('pulumi_tctest.vpc')
    vpn = _utilities.lazy_import('pulumi_tctest.vpn')

_utilities.register(
    resource_modules="""
[
 {
  "pkg": "tctest",
  "mod": "APIGateway/aPI",
  "fqn": "pulumi_tctest.apigateway",
  "classes": {
   "tctest:APIGateway/aPI:API": "API"
  }
 },
 {
  "pkg": "tctest",
  "mod": "APIGateway/aPIKey",
  "fqn": "pulumi_tctest.apigateway",
  "classes": {
   "tctest:APIGateway/aPIKey:APIKey": "APIKey"
  }
 },
 {
  "pkg": "tctest",
  "mod": "APIGateway/aPIKeyAttachment",
  "fqn": "pulumi_tctest.apigateway",
  "classes": {
   "tctest:APIGateway/aPIKeyAttachment:APIKeyAttachment": "APIKeyAttachment"
  }
 },
 {
  "pkg": "tctest",
  "mod": "APIGateway/customDomain",
  "fqn": "pulumi_tctest.apigateway",
  "classes": {
   "tctest:APIGateway/customDomain:CustomDomain": "CustomDomain"
  }
 },
 {
  "pkg": "tctest",
  "mod": "APIGateway/iPStrategy",
  "fqn": "pulumi_tctest.apigateway",
  "classes": {
   "tctest:APIGateway/iPStrategy:IPStrategy": "IPStrategy"
  }
 },
 {
  "pkg": "tctest",
  "mod": "APIGateway/service",
  "fqn": "pulumi_tctest.apigateway",
  "classes": {
   "tctest:APIGateway/service:Service": "Service"
  }
 },
 {
  "pkg": "tctest",
  "mod": "APIGateway/serviceRelease",
  "fqn": "pulumi_tctest.apigateway",
  "classes": {
   "tctest:APIGateway/serviceRelease:ServiceRelease": "ServiceRelease"
  }
 },
 {
  "pkg": "tctest",
  "mod": "APIGateway/strategyAttachment",
  "fqn": "pulumi_tctest.apigateway",
  "classes": {
   "tctest:APIGateway/strategyAttachment:StrategyAttachment": "StrategyAttachment"
  }
 },
 {
  "pkg": "tctest",
  "mod": "APIGateway/usagePlan",
  "fqn": "pulumi_tctest.apigateway",
  "classes": {
   "tctest:APIGateway/usagePlan:UsagePlan": "UsagePlan"
  }
 },
 {
  "pkg": "tctest",
  "mod": "APIGateway/usagePlanAttachment",
  "fqn": "pulumi_tctest.apigateway",
  "classes": {
   "tctest:APIGateway/usagePlanAttachment:UsagePlanAttachment": "UsagePlanAttachment"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Address/template",
  "fqn": "pulumi_tctest.address",
  "classes": {
   "tctest:Address/template:Template": "Template"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Address/templateGroup",
  "fqn": "pulumi_tctest.address",
  "classes": {
   "tctest:Address/templateGroup:TemplateGroup": "TemplateGroup"
  }
 },
 {
  "pkg": "tctest",
  "mod": "As/attachment",
  "fqn": "pulumi_tctest.as_",
  "classes": {
   "tctest:As/attachment:Attachment": "Attachment"
  }
 },
 {
  "pkg": "tctest",
  "mod": "As/lifecycleHook",
  "fqn": "pulumi_tctest.as_",
  "classes": {
   "tctest:As/lifecycleHook:LifecycleHook": "LifecycleHook"
  }
 },
 {
  "pkg": "tctest",
  "mod": "As/notification",
  "fqn": "pulumi_tctest.as_",
  "classes": {
   "tctest:As/notification:Notification": "Notification"
  }
 },
 {
  "pkg": "tctest",
  "mod": "As/scalingConfig",
  "fqn": "pulumi_tctest.as_",
  "classes": {
   "tctest:As/scalingConfig:ScalingConfig": "ScalingConfig"
  }
 },
 {
  "pkg": "tctest",
  "mod": "As/scalingGroup",
  "fqn": "pulumi_tctest.as_",
  "classes": {
   "tctest:As/scalingGroup:ScalingGroup": "ScalingGroup"
  }
 },
 {
  "pkg": "tctest",
  "mod": "As/scalingPolicy",
  "fqn": "pulumi_tctest.as_",
  "classes": {
   "tctest:As/scalingPolicy:ScalingPolicy": "ScalingPolicy"
  }
 },
 {
  "pkg": "tctest",
  "mod": "As/schedule",
  "fqn": "pulumi_tctest.as_",
  "classes": {
   "tctest:As/schedule:Schedule": "Schedule"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Audit/instance",
  "fqn": "pulumi_tctest.audit",
  "classes": {
   "tctest:Audit/instance:Instance": "Instance"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Cam/group",
  "fqn": "pulumi_tctest.cam",
  "classes": {
   "tctest:Cam/group:Group": "Group"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Cam/groupMembership",
  "fqn": "pulumi_tctest.cam",
  "classes": {
   "tctest:Cam/groupMembership:GroupMembership": "GroupMembership"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Cam/groupPolicyAttachment",
  "fqn": "pulumi_tctest.cam",
  "classes": {
   "tctest:Cam/groupPolicyAttachment:GroupPolicyAttachment": "GroupPolicyAttachment"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Cam/oIDCSSO",
  "fqn": "pulumi_tctest.cam",
  "classes": {
   "tctest:Cam/oIDCSSO:OIDCSSO": "OIDCSSO"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Cam/policy",
  "fqn": "pulumi_tctest.cam",
  "classes": {
   "tctest:Cam/policy:Policy": "Policy"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Cam/role",
  "fqn": "pulumi_tctest.cam",
  "classes": {
   "tctest:Cam/role:Role": "Role"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Cam/rolePolicyAttachment",
  "fqn": "pulumi_tctest.cam",
  "classes": {
   "tctest:Cam/rolePolicyAttachment:RolePolicyAttachment": "RolePolicyAttachment"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Cam/roleSSO",
  "fqn": "pulumi_tctest.cam",
  "classes": {
   "tctest:Cam/roleSSO:RoleSSO": "RoleSSO"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Cam/sAMLProvider",
  "fqn": "pulumi_tctest.cam",
  "classes": {
   "tctest:Cam/sAMLProvider:SAMLProvider": "SAMLProvider"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Cam/user",
  "fqn": "pulumi_tctest.cam",
  "classes": {
   "tctest:Cam/user:User": "User"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Cam/userPolicyAttachment",
  "fqn": "pulumi_tctest.cam",
  "classes": {
   "tctest:Cam/userPolicyAttachment:UserPolicyAttachment": "UserPolicyAttachment"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Cbs/snapshot",
  "fqn": "pulumi_tctest.cbs",
  "classes": {
   "tctest:Cbs/snapshot:Snapshot": "Snapshot"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Cbs/snapshotPolicy",
  "fqn": "pulumi_tctest.cbs",
  "classes": {
   "tctest:Cbs/snapshotPolicy:SnapshotPolicy": "SnapshotPolicy"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Cbs/snapshotPolicyAttachment",
  "fqn": "pulumi_tctest.cbs",
  "classes": {
   "tctest:Cbs/snapshotPolicyAttachment:SnapshotPolicyAttachment": "SnapshotPolicyAttachment"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Cbs/storage",
  "fqn": "pulumi_tctest.cbs",
  "classes": {
   "tctest:Cbs/storage:Storage": "Storage"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Cbs/storageAttachment",
  "fqn": "pulumi_tctest.cbs",
  "classes": {
   "tctest:Cbs/storageAttachment:StorageAttachment": "StorageAttachment"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Ccn/attachment",
  "fqn": "pulumi_tctest.ccn",
  "classes": {
   "tctest:Ccn/attachment:Attachment": "Attachment"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Ccn/ccnBandwidthLimit",
  "fqn": "pulumi_tctest.ccn",
  "classes": {
   "tctest:Ccn/ccnBandwidthLimit:CcnBandwidthLimit": "CcnBandwidthLimit"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Ccn/instance",
  "fqn": "pulumi_tctest.ccn",
  "classes": {
   "tctest:Ccn/instance:Instance": "Instance"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Cdh/instance",
  "fqn": "pulumi_tctest.cdh",
  "classes": {
   "tctest:Cdh/instance:Instance": "Instance"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Cdn/cdnDomain",
  "fqn": "pulumi_tctest.cdn",
  "classes": {
   "tctest:Cdn/cdnDomain:CdnDomain": "CdnDomain"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Cfs/accessGroup",
  "fqn": "pulumi_tctest.cfs",
  "classes": {
   "tctest:Cfs/accessGroup:AccessGroup": "AccessGroup"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Cfs/accessRule",
  "fqn": "pulumi_tctest.cfs",
  "classes": {
   "tctest:Cfs/accessRule:AccessRule": "AccessRule"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Cfs/fileSystem",
  "fqn": "pulumi_tctest.cfs",
  "classes": {
   "tctest:Cfs/fileSystem:FileSystem": "FileSystem"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Ckafka/acl",
  "fqn": "pulumi_tctest.ckafka",
  "classes": {
   "tctest:Ckafka/acl:Acl": "Acl"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Ckafka/instance",
  "fqn": "pulumi_tctest.ckafka",
  "classes": {
   "tctest:Ckafka/instance:Instance": "Instance"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Ckafka/topic",
  "fqn": "pulumi_tctest.ckafka",
  "classes": {
   "tctest:Ckafka/topic:Topic": "Topic"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Ckafka/user",
  "fqn": "pulumi_tctest.ckafka",
  "classes": {
   "tctest:Ckafka/user:User": "User"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Clb/customizedConfig",
  "fqn": "pulumi_tctest.clb",
  "classes": {
   "tctest:Clb/customizedConfig:CustomizedConfig": "CustomizedConfig"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Clb/instance",
  "fqn": "pulumi_tctest.clb",
  "classes": {
   "tctest:Clb/instance:Instance": "Instance"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Clb/listener",
  "fqn": "pulumi_tctest.clb",
  "classes": {
   "tctest:Clb/listener:Listener": "Listener"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Clb/listenerRule",
  "fqn": "pulumi_tctest.clb",
  "classes": {
   "tctest:Clb/listenerRule:ListenerRule": "ListenerRule"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Clb/logSet",
  "fqn": "pulumi_tctest.clb",
  "classes": {
   "tctest:Clb/logSet:LogSet": "LogSet"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Clb/logTopic",
  "fqn": "pulumi_tctest.clb",
  "classes": {
   "tctest:Clb/logTopic:LogTopic": "LogTopic"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Clb/redirection",
  "fqn": "pulumi_tctest.clb",
  "classes": {
   "tctest:Clb/redirection:Redirection": "Redirection"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Clb/serverAttachment",
  "fqn": "pulumi_tctest.clb",
  "classes": {
   "tctest:Clb/serverAttachment:ServerAttachment": "ServerAttachment"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Clb/tGAttachmentInstance",
  "fqn": "pulumi_tctest.clb",
  "classes": {
   "tctest:Clb/tGAttachmentInstance:TGAttachmentInstance": "TGAttachmentInstance"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Clb/targetGroup",
  "fqn": "pulumi_tctest.clb",
  "classes": {
   "tctest:Clb/targetGroup:TargetGroup": "TargetGroup"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Clb/targetGroupAttachment",
  "fqn": "pulumi_tctest.clb",
  "classes": {
   "tctest:Clb/targetGroupAttachment:TargetGroupAttachment": "TargetGroupAttachment"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Cls/config",
  "fqn": "pulumi_tctest.cls",
  "classes": {
   "tctest:Cls/config:Config": "Config"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Cls/configAttachment",
  "fqn": "pulumi_tctest.cls",
  "classes": {
   "tctest:Cls/configAttachment:ConfigAttachment": "ConfigAttachment"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Cls/configExtra",
  "fqn": "pulumi_tctest.cls",
  "classes": {
   "tctest:Cls/configExtra:ConfigExtra": "ConfigExtra"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Cls/cosShipper",
  "fqn": "pulumi_tctest.cls",
  "classes": {
   "tctest:Cls/cosShipper:CosShipper": "CosShipper"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Cls/logset",
  "fqn": "pulumi_tctest.cls",
  "classes": {
   "tctest:Cls/logset:Logset": "Logset"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Cls/machineGroup",
  "fqn": "pulumi_tctest.cls",
  "classes": {
   "tctest:Cls/machineGroup:MachineGroup": "MachineGroup"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Cls/topic",
  "fqn": "pulumi_tctest.cls",
  "classes": {
   "tctest:Cls/topic:Topic": "Topic"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Container/cluster",
  "fqn": "pulumi_tctest.container",
  "classes": {
   "tctest:Container/cluster:Cluster": "Cluster"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Container/clusterInstance",
  "fqn": "pulumi_tctest.container",
  "classes": {
   "tctest:Container/clusterInstance:ClusterInstance": "ClusterInstance"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Cos/bucketObject",
  "fqn": "pulumi_tctest.cos",
  "classes": {
   "tctest:Cos/bucketObject:BucketObject": "BucketObject"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Cos/bucketPolicy",
  "fqn": "pulumi_tctest.cos",
  "classes": {
   "tctest:Cos/bucketPolicy:BucketPolicy": "BucketPolicy"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Cos/cosBucket",
  "fqn": "pulumi_tctest.cos",
  "classes": {
   "tctest:Cos/cosBucket:CosBucket": "CosBucket"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Cvm/instance",
  "fqn": "pulumi_tctest.cvm",
  "classes": {
   "tctest:Cvm/instance:Instance": "Instance"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Cvm/reservedInstance",
  "fqn": "pulumi_tctest.cvm",
  "classes": {
   "tctest:Cvm/reservedInstance:ReservedInstance": "ReservedInstance"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Cynosdb/cluster",
  "fqn": "pulumi_tctest.cynosdb",
  "classes": {
   "tctest:Cynosdb/cluster:Cluster": "Cluster"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Cynosdb/readonlyInstance",
  "fqn": "pulumi_tctest.cynosdb",
  "classes": {
   "tctest:Cynosdb/readonlyInstance:ReadonlyInstance": "ReadonlyInstance"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Dayu/cCHttpPolicy",
  "fqn": "pulumi_tctest.dayu",
  "classes": {
   "tctest:Dayu/cCHttpPolicy:CCHttpPolicy": "CCHttpPolicy"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Dayu/cCHttpsPolicy",
  "fqn": "pulumi_tctest.dayu",
  "classes": {
   "tctest:Dayu/cCHttpsPolicy:CCHttpsPolicy": "CCHttpsPolicy"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Dayu/cCPolicyV2",
  "fqn": "pulumi_tctest.dayu",
  "classes": {
   "tctest:Dayu/cCPolicyV2:CCPolicyV2": "CCPolicyV2"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Dayu/dayuEipEip",
  "fqn": "pulumi_tctest.dayu",
  "classes": {
   "tctest:Dayu/dayuEipEip:DayuEipEip": "DayuEipEip"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Dayu/ddosPolicy",
  "fqn": "pulumi_tctest.dayu",
  "classes": {
   "tctest:Dayu/ddosPolicy:DdosPolicy": "DdosPolicy"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Dayu/ddosPolicyAttachment",
  "fqn": "pulumi_tctest.dayu",
  "classes": {
   "tctest:Dayu/ddosPolicyAttachment:DdosPolicyAttachment": "DdosPolicyAttachment"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Dayu/ddosPolicyCase",
  "fqn": "pulumi_tctest.dayu",
  "classes": {
   "tctest:Dayu/ddosPolicyCase:DdosPolicyCase": "DdosPolicyCase"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Dayu/ddosPolicyV2",
  "fqn": "pulumi_tctest.dayu",
  "classes": {
   "tctest:Dayu/ddosPolicyV2:DdosPolicyV2": "DdosPolicyV2"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Dayu/l4Rule",
  "fqn": "pulumi_tctest.dayu",
  "classes": {
   "tctest:Dayu/l4Rule:L4Rule": "L4Rule"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Dayu/l4RuleV2",
  "fqn": "pulumi_tctest.dayu",
  "classes": {
   "tctest:Dayu/l4RuleV2:L4RuleV2": "L4RuleV2"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Dayu/l7Rule",
  "fqn": "pulumi_tctest.dayu",
  "classes": {
   "tctest:Dayu/l7Rule:L7Rule": "L7Rule"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Dayu/l7RuleV2",
  "fqn": "pulumi_tctest.dayu",
  "classes": {
   "tctest:Dayu/l7RuleV2:L7RuleV2": "L7RuleV2"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Dc/gatewayCcnRouteInstance",
  "fqn": "pulumi_tctest.dc",
  "classes": {
   "tctest:Dc/gatewayCcnRouteInstance:GatewayCcnRouteInstance": "GatewayCcnRouteInstance"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Dc/gatewayInstance",
  "fqn": "pulumi_tctest.dc",
  "classes": {
   "tctest:Dc/gatewayInstance:GatewayInstance": "GatewayInstance"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Dcx/instance",
  "fqn": "pulumi_tctest.dcx",
  "classes": {
   "tctest:Dcx/instance:Instance": "Instance"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Dnat/instance",
  "fqn": "pulumi_tctest.dnat",
  "classes": {
   "tctest:Dnat/instance:Instance": "Instance"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Dnspod/domainInstance",
  "fqn": "pulumi_tctest.dnspod",
  "classes": {
   "tctest:Dnspod/domainInstance:DomainInstance": "DomainInstance"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Dnspod/record",
  "fqn": "pulumi_tctest.dnspod",
  "classes": {
   "tctest:Dnspod/record:Record": "Record"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Eip/association",
  "fqn": "pulumi_tctest.eip",
  "classes": {
   "tctest:Eip/association:Association": "Association"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Eip/instance",
  "fqn": "pulumi_tctest.eip",
  "classes": {
   "tctest:Eip/instance:Instance": "Instance"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Eks/cluster",
  "fqn": "pulumi_tctest.eks",
  "classes": {
   "tctest:Eks/cluster:Cluster": "Cluster"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Eks/containerInstance",
  "fqn": "pulumi_tctest.eks",
  "classes": {
   "tctest:Eks/containerInstance:ContainerInstance": "ContainerInstance"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Elasticsearch/instance",
  "fqn": "pulumi_tctest.elasticsearch",
  "classes": {
   "tctest:Elasticsearch/instance:Instance": "Instance"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Emr/cluster",
  "fqn": "pulumi_tctest.emr",
  "classes": {
   "tctest:Emr/cluster:Cluster": "Cluster"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Eni/attachment",
  "fqn": "pulumi_tctest.eni",
  "classes": {
   "tctest:Eni/attachment:Attachment": "Attachment"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Eni/instance",
  "fqn": "pulumi_tctest.eni",
  "classes": {
   "tctest:Eni/instance:Instance": "Instance"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Gaap/certificate",
  "fqn": "pulumi_tctest.gaap",
  "classes": {
   "tctest:Gaap/certificate:Certificate": "Certificate"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Gaap/domainErrorPageInfo",
  "fqn": "pulumi_tctest.gaap",
  "classes": {
   "tctest:Gaap/domainErrorPageInfo:DomainErrorPageInfo": "DomainErrorPageInfo"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Gaap/httpDomain",
  "fqn": "pulumi_tctest.gaap",
  "classes": {
   "tctest:Gaap/httpDomain:HttpDomain": "HttpDomain"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Gaap/httpRule",
  "fqn": "pulumi_tctest.gaap",
  "classes": {
   "tctest:Gaap/httpRule:HttpRule": "HttpRule"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Gaap/layer4Listener",
  "fqn": "pulumi_tctest.gaap",
  "classes": {
   "tctest:Gaap/layer4Listener:Layer4Listener": "Layer4Listener"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Gaap/layer7Listener",
  "fqn": "pulumi_tctest.gaap",
  "classes": {
   "tctest:Gaap/layer7Listener:Layer7Listener": "Layer7Listener"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Gaap/proxy",
  "fqn": "pulumi_tctest.gaap",
  "classes": {
   "tctest:Gaap/proxy:Proxy": "Proxy"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Gaap/realserver",
  "fqn": "pulumi_tctest.gaap",
  "classes": {
   "tctest:Gaap/realserver:Realserver": "Realserver"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Gaap/securityPolicy",
  "fqn": "pulumi_tctest.gaap",
  "classes": {
   "tctest:Gaap/securityPolicy:SecurityPolicy": "SecurityPolicy"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Gaap/securityRule",
  "fqn": "pulumi_tctest.gaap",
  "classes": {
   "tctest:Gaap/securityRule:SecurityRule": "SecurityRule"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Ha/haVip",
  "fqn": "pulumi_tctest.ha",
  "classes": {
   "tctest:Ha/haVip:HaVip": "HaVip"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Ha/vipEipAttachment",
  "fqn": "pulumi_tctest.ha",
  "classes": {
   "tctest:Ha/vipEipAttachment:VipEipAttachment": "VipEipAttachment"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Image/instance",
  "fqn": "pulumi_tctest.image",
  "classes": {
   "tctest:Image/instance:Instance": "Instance"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Key/pair",
  "fqn": "pulumi_tctest.key",
  "classes": {
   "tctest:Key/pair:Pair": "Pair"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Kms/externalKey",
  "fqn": "pulumi_tctest.kms",
  "classes": {
   "tctest:Kms/externalKey:ExternalKey": "ExternalKey"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Kms/kmsKey",
  "fqn": "pulumi_tctest.kms",
  "classes": {
   "tctest:Kms/kmsKey:KmsKey": "KmsKey"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Mongodb/instance",
  "fqn": "pulumi_tctest.mongodb",
  "classes": {
   "tctest:Mongodb/instance:Instance": "Instance"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Mongodb/shardingInstance",
  "fqn": "pulumi_tctest.mongodb",
  "classes": {
   "tctest:Mongodb/shardingInstance:ShardingInstance": "ShardingInstance"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Mongodb/standbyInstance",
  "fqn": "pulumi_tctest.mongodb",
  "classes": {
   "tctest:Mongodb/standbyInstance:StandbyInstance": "StandbyInstance"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Monitor/alarmPolicy",
  "fqn": "pulumi_tctest.monitor",
  "classes": {
   "tctest:Monitor/alarmPolicy:AlarmPolicy": "AlarmPolicy"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Monitor/bindingAlarmReceiver",
  "fqn": "pulumi_tctest.monitor",
  "classes": {
   "tctest:Monitor/bindingAlarmReceiver:BindingAlarmReceiver": "BindingAlarmReceiver"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Monitor/bindingObject",
  "fqn": "pulumi_tctest.monitor",
  "classes": {
   "tctest:Monitor/bindingObject:BindingObject": "BindingObject"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Monitor/policyBindingObject",
  "fqn": "pulumi_tctest.monitor",
  "classes": {
   "tctest:Monitor/policyBindingObject:PolicyBindingObject": "PolicyBindingObject"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Monitor/policyGroup",
  "fqn": "pulumi_tctest.monitor",
  "classes": {
   "tctest:Monitor/policyGroup:PolicyGroup": "PolicyGroup"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Mysql/account",
  "fqn": "pulumi_tctest.mysql",
  "classes": {
   "tctest:Mysql/account:Account": "Account"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Mysql/accountPrivilege",
  "fqn": "pulumi_tctest.mysql",
  "classes": {
   "tctest:Mysql/accountPrivilege:AccountPrivilege": "AccountPrivilege"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Mysql/backupPolicy",
  "fqn": "pulumi_tctest.mysql",
  "classes": {
   "tctest:Mysql/backupPolicy:BackupPolicy": "BackupPolicy"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Mysql/instance",
  "fqn": "pulumi_tctest.mysql",
  "classes": {
   "tctest:Mysql/instance:Instance": "Instance"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Mysql/privilege",
  "fqn": "pulumi_tctest.mysql",
  "classes": {
   "tctest:Mysql/privilege:Privilege": "Privilege"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Mysql/readonlyInstance",
  "fqn": "pulumi_tctest.mysql",
  "classes": {
   "tctest:Mysql/readonlyInstance:ReadonlyInstance": "ReadonlyInstance"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Nat/gateway",
  "fqn": "pulumi_tctest.nat",
  "classes": {
   "tctest:Nat/gateway:Gateway": "Gateway"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Nat/gatewaySnat",
  "fqn": "pulumi_tctest.nat",
  "classes": {
   "tctest:Nat/gatewaySnat:GatewaySnat": "GatewaySnat"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Placement/group",
  "fqn": "pulumi_tctest.placement",
  "classes": {
   "tctest:Placement/group:Group": "Group"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Postgresql/instance",
  "fqn": "pulumi_tctest.postgresql",
  "classes": {
   "tctest:Postgresql/instance:Instance": "Instance"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Postgresql/readonlyAttachment",
  "fqn": "pulumi_tctest.postgresql",
  "classes": {
   "tctest:Postgresql/readonlyAttachment:ReadonlyAttachment": "ReadonlyAttachment"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Postgresql/readonlyGroup",
  "fqn": "pulumi_tctest.postgresql",
  "classes": {
   "tctest:Postgresql/readonlyGroup:ReadonlyGroup": "ReadonlyGroup"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Postgresql/readonlyInstance",
  "fqn": "pulumi_tctest.postgresql",
  "classes": {
   "tctest:Postgresql/readonlyInstance:ReadonlyInstance": "ReadonlyInstance"
  }
 },
 {
  "pkg": "tctest",
  "mod": "PrivateDns/record",
  "fqn": "pulumi_tctest.privatedns",
  "classes": {
   "tctest:PrivateDns/record:Record": "Record"
  }
 },
 {
  "pkg": "tctest",
  "mod": "PrivateDns/zone",
  "fqn": "pulumi_tctest.privatedns",
  "classes": {
   "tctest:PrivateDns/zone:Zone": "Zone"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Protocol/template",
  "fqn": "pulumi_tctest.protocol",
  "classes": {
   "tctest:Protocol/template:Template": "Template"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Protocol/templateGroup",
  "fqn": "pulumi_tctest.protocol",
  "classes": {
   "tctest:Protocol/templateGroup:TemplateGroup": "TemplateGroup"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Redis/backupConfig",
  "fqn": "pulumi_tctest.redis",
  "classes": {
   "tctest:Redis/backupConfig:BackupConfig": "BackupConfig"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Redis/instance",
  "fqn": "pulumi_tctest.redis",
  "classes": {
   "tctest:Redis/instance:Instance": "Instance"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Route/entry",
  "fqn": "pulumi_tctest.route",
  "classes": {
   "tctest:Route/entry:Entry": "Entry"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Scf/function",
  "fqn": "pulumi_tctest.scf",
  "classes": {
   "tctest:Scf/function:Function": "Function"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Scf/layer",
  "fqn": "pulumi_tctest.scf",
  "classes": {
   "tctest:Scf/layer:Layer": "Layer"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Scf/scfNamespace",
  "fqn": "pulumi_tctest.scf",
  "classes": {
   "tctest:Scf/scfNamespace:ScfNamespace": "ScfNamespace"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Security/group",
  "fqn": "pulumi_tctest.security",
  "classes": {
   "tctest:Security/group:Group": "Group"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Security/groupLiteRule",
  "fqn": "pulumi_tctest.security",
  "classes": {
   "tctest:Security/groupLiteRule:GroupLiteRule": "GroupLiteRule"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Security/groupRule",
  "fqn": "pulumi_tctest.security",
  "classes": {
   "tctest:Security/groupRule:GroupRule": "GroupRule"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Sqlserver/account",
  "fqn": "pulumi_tctest.sqlserver",
  "classes": {
   "tctest:Sqlserver/account:Account": "Account"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Sqlserver/accountDBAttachment",
  "fqn": "pulumi_tctest.sqlserver",
  "classes": {
   "tctest:Sqlserver/accountDBAttachment:AccountDBAttachment": "AccountDBAttachment"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Sqlserver/basicInstance",
  "fqn": "pulumi_tctest.sqlserver",
  "classes": {
   "tctest:Sqlserver/basicInstance:BasicInstance": "BasicInstance"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Sqlserver/dB",
  "fqn": "pulumi_tctest.sqlserver",
  "classes": {
   "tctest:Sqlserver/dB:DB": "DB"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Sqlserver/instance",
  "fqn": "pulumi_tctest.sqlserver",
  "classes": {
   "tctest:Sqlserver/instance:Instance": "Instance"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Sqlserver/publishSubscribe",
  "fqn": "pulumi_tctest.sqlserver",
  "classes": {
   "tctest:Sqlserver/publishSubscribe:PublishSubscribe": "PublishSubscribe"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Sqlserver/readonlyInstance",
  "fqn": "pulumi_tctest.sqlserver",
  "classes": {
   "tctest:Sqlserver/readonlyInstance:ReadonlyInstance": "ReadonlyInstance"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Ssl/certificate",
  "fqn": "pulumi_tctest.ssl",
  "classes": {
   "tctest:Ssl/certificate:Certificate": "Certificate"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Ssl/instance",
  "fqn": "pulumi_tctest.ssl",
  "classes": {
   "tctest:Ssl/instance:Instance": "Instance"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Ssm/secret",
  "fqn": "pulumi_tctest.ssm",
  "classes": {
   "tctest:Ssm/secret:Secret": "Secret"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Ssm/secretVersion",
  "fqn": "pulumi_tctest.ssm",
  "classes": {
   "tctest:Ssm/secretVersion:SecretVersion": "SecretVersion"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Tcaplus/cluster",
  "fqn": "pulumi_tctest.tcaplus",
  "classes": {
   "tctest:Tcaplus/cluster:Cluster": "Cluster"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Tcaplus/idl",
  "fqn": "pulumi_tctest.tcaplus",
  "classes": {
   "tctest:Tcaplus/idl:Idl": "Idl"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Tcaplus/table",
  "fqn": "pulumi_tctest.tcaplus",
  "classes": {
   "tctest:Tcaplus/table:Table": "Table"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Tcaplus/tableGroup",
  "fqn": "pulumi_tctest.tcaplus",
  "classes": {
   "tctest:Tcaplus/tableGroup:TableGroup": "TableGroup"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Tcr/instance",
  "fqn": "pulumi_tctest.tcr",
  "classes": {
   "tctest:Tcr/instance:Instance": "Instance"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Tcr/namespace",
  "fqn": "pulumi_tctest.tcr",
  "classes": {
   "tctest:Tcr/namespace:Namespace": "Namespace"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Tcr/repository",
  "fqn": "pulumi_tctest.tcr",
  "classes": {
   "tctest:Tcr/repository:Repository": "Repository"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Tcr/tcrToken",
  "fqn": "pulumi_tctest.tcr",
  "classes": {
   "tctest:Tcr/tcrToken:TcrToken": "TcrToken"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Tcr/vpcAttachment",
  "fqn": "pulumi_tctest.tcr",
  "classes": {
   "tctest:Tcr/vpcAttachment:VpcAttachment": "VpcAttachment"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Tdmq/instance",
  "fqn": "pulumi_tctest.tdmq",
  "classes": {
   "tctest:Tdmq/instance:Instance": "Instance"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Tdmq/namespace",
  "fqn": "pulumi_tctest.tdmq",
  "classes": {
   "tctest:Tdmq/namespace:Namespace": "Namespace"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Tdmq/namespaceRoleAttachment",
  "fqn": "pulumi_tctest.tdmq",
  "classes": {
   "tctest:Tdmq/namespaceRoleAttachment:NamespaceRoleAttachment": "NamespaceRoleAttachment"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Tdmq/role",
  "fqn": "pulumi_tctest.tdmq",
  "classes": {
   "tctest:Tdmq/role:Role": "Role"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Tdmq/topic",
  "fqn": "pulumi_tctest.tdmq",
  "classes": {
   "tctest:Tdmq/topic:Topic": "Topic"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Tke/addonAttachment",
  "fqn": "pulumi_tctest.tke",
  "classes": {
   "tctest:Tke/addonAttachment:AddonAttachment": "AddonAttachment"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Tke/asScalingGroup",
  "fqn": "pulumi_tctest.tke",
  "classes": {
   "tctest:Tke/asScalingGroup:AsScalingGroup": "AsScalingGroup"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Tke/authAttachment",
  "fqn": "pulumi_tctest.tke",
  "classes": {
   "tctest:Tke/authAttachment:AuthAttachment": "AuthAttachment"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Tke/cluster",
  "fqn": "pulumi_tctest.tke",
  "classes": {
   "tctest:Tke/cluster:Cluster": "Cluster"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Tke/clusterAttachment",
  "fqn": "pulumi_tctest.tke",
  "classes": {
   "tctest:Tke/clusterAttachment:ClusterAttachment": "ClusterAttachment"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Tke/nodePool",
  "fqn": "pulumi_tctest.tke",
  "classes": {
   "tctest:Tke/nodePool:NodePool": "NodePool"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Tke/scaleWorker",
  "fqn": "pulumi_tctest.tke",
  "classes": {
   "tctest:Tke/scaleWorker:ScaleWorker": "ScaleWorker"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Vod/adaptiveDynamicStreamingTemplate",
  "fqn": "pulumi_tctest.vod",
  "classes": {
   "tctest:Vod/adaptiveDynamicStreamingTemplate:AdaptiveDynamicStreamingTemplate": "AdaptiveDynamicStreamingTemplate"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Vod/imageSpriteTemplate",
  "fqn": "pulumi_tctest.vod",
  "classes": {
   "tctest:Vod/imageSpriteTemplate:ImageSpriteTemplate": "ImageSpriteTemplate"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Vod/procedureTemplate",
  "fqn": "pulumi_tctest.vod",
  "classes": {
   "tctest:Vod/procedureTemplate:ProcedureTemplate": "ProcedureTemplate"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Vod/snapshotByTimeOffsetTemplate",
  "fqn": "pulumi_tctest.vod",
  "classes": {
   "tctest:Vod/snapshotByTimeOffsetTemplate:SnapshotByTimeOffsetTemplate": "SnapshotByTimeOffsetTemplate"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Vod/subApplication",
  "fqn": "pulumi_tctest.vod",
  "classes": {
   "tctest:Vod/subApplication:SubApplication": "SubApplication"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Vod/superPlayerConfig",
  "fqn": "pulumi_tctest.vod",
  "classes": {
   "tctest:Vod/superPlayerConfig:SuperPlayerConfig": "SuperPlayerConfig"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Vpc/aCL",
  "fqn": "pulumi_tctest.vpc",
  "classes": {
   "tctest:Vpc/aCL:ACL": "ACL"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Vpc/aclAttachment",
  "fqn": "pulumi_tctest.vpc",
  "classes": {
   "tctest:Vpc/aclAttachment:AclAttachment": "AclAttachment"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Vpc/instance",
  "fqn": "pulumi_tctest.vpc",
  "classes": {
   "tctest:Vpc/instance:Instance": "Instance"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Vpc/routeEntry",
  "fqn": "pulumi_tctest.vpc",
  "classes": {
   "tctest:Vpc/routeEntry:RouteEntry": "RouteEntry"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Vpc/routeTable",
  "fqn": "pulumi_tctest.vpc",
  "classes": {
   "tctest:Vpc/routeTable:RouteTable": "RouteTable"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Vpc/subnet",
  "fqn": "pulumi_tctest.vpc",
  "classes": {
   "tctest:Vpc/subnet:Subnet": "Subnet"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Vpn/connection",
  "fqn": "pulumi_tctest.vpn",
  "classes": {
   "tctest:Vpn/connection:Connection": "Connection"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Vpn/customerGateway",
  "fqn": "pulumi_tctest.vpn",
  "classes": {
   "tctest:Vpn/customerGateway:CustomerGateway": "CustomerGateway"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Vpn/gateway",
  "fqn": "pulumi_tctest.vpn",
  "classes": {
   "tctest:Vpn/gateway:Gateway": "Gateway"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Vpn/gatewayRoute",
  "fqn": "pulumi_tctest.vpn",
  "classes": {
   "tctest:Vpn/gatewayRoute:GatewayRoute": "GatewayRoute"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Vpn/sslClient",
  "fqn": "pulumi_tctest.vpn",
  "classes": {
   "tctest:Vpn/sslClient:SslClient": "SslClient"
  }
 },
 {
  "pkg": "tctest",
  "mod": "Vpn/sslServer",
  "fqn": "pulumi_tctest.vpn",
  "classes": {
   "tctest:Vpn/sslServer:SslServer": "SslServer"
  }
 }
]
""",
    resource_packages="""
[
 {
  "pkg": "tctest",
  "token": "pulumi:providers:tctest",
  "fqn": "pulumi_tctest",
  "class": "Provider"
 }
]
"""
)
