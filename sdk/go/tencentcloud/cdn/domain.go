// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cdn

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type Domain struct {
	pulumi.CustomResourceState

	// Domain name acceleration region. `mainland`: acceleration inside mainland China, `overseas`: acceleration outside
	// mainland China, `global`: global acceleration. Overseas acceleration service must be enabled to use overseas
	// acceleration and global acceleration.
	Area pulumi.StringPtrOutput `pulumi:"area"`
	// CNAME address of domain name.
	Cname pulumi.StringOutput `pulumi:"cname"`
	// Creation time of domain name.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Name of the acceleration domain.
	Domain pulumi.StringOutput `pulumi:"domain"`
	// Whether to enable full-path cache. Default value is `true`.
	FullUrlCache pulumi.BoolPtrOutput `pulumi:"fullUrlCache"`
	// HTTPS acceleration configuration. It's a list and consist of at most one item.
	HttpsConfig DomainHttpsConfigOutput `pulumi:"httpsConfig"`
	// ipv6 access configuration switch. Only available when area set to `mainland`. Valid values are `on` and `off`. Default
	// value is `off`.
	Ipv6AccessSwitch pulumi.StringPtrOutput `pulumi:"ipv6AccessSwitch"`
	// Origin server configuration. It's a list and consist of at most one item.
	Origin DomainOriginOutput `pulumi:"origin"`
	// The project CDN belongs to, default to 0.
	ProjectId pulumi.IntPtrOutput `pulumi:"projectId"`
	// Sharding back to source configuration switch. Valid values are `on` and `off`. Default value is `on`.
	RangeOriginSwitch pulumi.StringPtrOutput `pulumi:"rangeOriginSwitch"`
	// Request header configuration. It's a list and consist of at most one item.
	RequestHeader DomainRequestHeaderOutput `pulumi:"requestHeader"`
	// Advanced path cache configuration.
	RuleCaches DomainRuleCachArrayOutput `pulumi:"ruleCaches"`
	// Acceleration domain name service type. `web`: static acceleration, `download`: download acceleration, `media`: streaming
	// media VOD acceleration.
	ServiceType pulumi.StringOutput `pulumi:"serviceType"`
	// Acceleration service status.
	Status pulumi.StringOutput `pulumi:"status"`
	// Tags of cdn domain.
	Tags pulumi.MapOutput `pulumi:"tags"`
}

// NewDomain registers a new resource with the given unique name, arguments, and options.
func NewDomain(ctx *pulumi.Context,
	name string, args *DomainArgs, opts ...pulumi.ResourceOption) (*Domain, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Domain == nil {
		return nil, errors.New("invalid value for required argument 'Domain'")
	}
	if args.Origin == nil {
		return nil, errors.New("invalid value for required argument 'Origin'")
	}
	if args.ServiceType == nil {
		return nil, errors.New("invalid value for required argument 'ServiceType'")
	}
	var resource Domain
	err := ctx.RegisterResource("tencentcloud:Cdn/domain:Domain", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDomain gets an existing Domain resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDomain(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DomainState, opts ...pulumi.ResourceOption) (*Domain, error) {
	var resource Domain
	err := ctx.ReadResource("tencentcloud:Cdn/domain:Domain", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Domain resources.
type domainState struct {
	// Domain name acceleration region. `mainland`: acceleration inside mainland China, `overseas`: acceleration outside
	// mainland China, `global`: global acceleration. Overseas acceleration service must be enabled to use overseas
	// acceleration and global acceleration.
	Area *string `pulumi:"area"`
	// CNAME address of domain name.
	Cname *string `pulumi:"cname"`
	// Creation time of domain name.
	CreateTime *string `pulumi:"createTime"`
	// Name of the acceleration domain.
	Domain *string `pulumi:"domain"`
	// Whether to enable full-path cache. Default value is `true`.
	FullUrlCache *bool `pulumi:"fullUrlCache"`
	// HTTPS acceleration configuration. It's a list and consist of at most one item.
	HttpsConfig *DomainHttpsConfig `pulumi:"httpsConfig"`
	// ipv6 access configuration switch. Only available when area set to `mainland`. Valid values are `on` and `off`. Default
	// value is `off`.
	Ipv6AccessSwitch *string `pulumi:"ipv6AccessSwitch"`
	// Origin server configuration. It's a list and consist of at most one item.
	Origin *DomainOrigin `pulumi:"origin"`
	// The project CDN belongs to, default to 0.
	ProjectId *int `pulumi:"projectId"`
	// Sharding back to source configuration switch. Valid values are `on` and `off`. Default value is `on`.
	RangeOriginSwitch *string `pulumi:"rangeOriginSwitch"`
	// Request header configuration. It's a list and consist of at most one item.
	RequestHeader *DomainRequestHeader `pulumi:"requestHeader"`
	// Advanced path cache configuration.
	RuleCaches []DomainRuleCach `pulumi:"ruleCaches"`
	// Acceleration domain name service type. `web`: static acceleration, `download`: download acceleration, `media`: streaming
	// media VOD acceleration.
	ServiceType *string `pulumi:"serviceType"`
	// Acceleration service status.
	Status *string `pulumi:"status"`
	// Tags of cdn domain.
	Tags map[string]interface{} `pulumi:"tags"`
}

type DomainState struct {
	// Domain name acceleration region. `mainland`: acceleration inside mainland China, `overseas`: acceleration outside
	// mainland China, `global`: global acceleration. Overseas acceleration service must be enabled to use overseas
	// acceleration and global acceleration.
	Area pulumi.StringPtrInput
	// CNAME address of domain name.
	Cname pulumi.StringPtrInput
	// Creation time of domain name.
	CreateTime pulumi.StringPtrInput
	// Name of the acceleration domain.
	Domain pulumi.StringPtrInput
	// Whether to enable full-path cache. Default value is `true`.
	FullUrlCache pulumi.BoolPtrInput
	// HTTPS acceleration configuration. It's a list and consist of at most one item.
	HttpsConfig DomainHttpsConfigPtrInput
	// ipv6 access configuration switch. Only available when area set to `mainland`. Valid values are `on` and `off`. Default
	// value is `off`.
	Ipv6AccessSwitch pulumi.StringPtrInput
	// Origin server configuration. It's a list and consist of at most one item.
	Origin DomainOriginPtrInput
	// The project CDN belongs to, default to 0.
	ProjectId pulumi.IntPtrInput
	// Sharding back to source configuration switch. Valid values are `on` and `off`. Default value is `on`.
	RangeOriginSwitch pulumi.StringPtrInput
	// Request header configuration. It's a list and consist of at most one item.
	RequestHeader DomainRequestHeaderPtrInput
	// Advanced path cache configuration.
	RuleCaches DomainRuleCachArrayInput
	// Acceleration domain name service type. `web`: static acceleration, `download`: download acceleration, `media`: streaming
	// media VOD acceleration.
	ServiceType pulumi.StringPtrInput
	// Acceleration service status.
	Status pulumi.StringPtrInput
	// Tags of cdn domain.
	Tags pulumi.MapInput
}

func (DomainState) ElementType() reflect.Type {
	return reflect.TypeOf((*domainState)(nil)).Elem()
}

type domainArgs struct {
	// Domain name acceleration region. `mainland`: acceleration inside mainland China, `overseas`: acceleration outside
	// mainland China, `global`: global acceleration. Overseas acceleration service must be enabled to use overseas
	// acceleration and global acceleration.
	Area *string `pulumi:"area"`
	// Name of the acceleration domain.
	Domain string `pulumi:"domain"`
	// Whether to enable full-path cache. Default value is `true`.
	FullUrlCache *bool `pulumi:"fullUrlCache"`
	// HTTPS acceleration configuration. It's a list and consist of at most one item.
	HttpsConfig *DomainHttpsConfig `pulumi:"httpsConfig"`
	// ipv6 access configuration switch. Only available when area set to `mainland`. Valid values are `on` and `off`. Default
	// value is `off`.
	Ipv6AccessSwitch *string `pulumi:"ipv6AccessSwitch"`
	// Origin server configuration. It's a list and consist of at most one item.
	Origin DomainOrigin `pulumi:"origin"`
	// The project CDN belongs to, default to 0.
	ProjectId *int `pulumi:"projectId"`
	// Sharding back to source configuration switch. Valid values are `on` and `off`. Default value is `on`.
	RangeOriginSwitch *string `pulumi:"rangeOriginSwitch"`
	// Request header configuration. It's a list and consist of at most one item.
	RequestHeader *DomainRequestHeader `pulumi:"requestHeader"`
	// Advanced path cache configuration.
	RuleCaches []DomainRuleCach `pulumi:"ruleCaches"`
	// Acceleration domain name service type. `web`: static acceleration, `download`: download acceleration, `media`: streaming
	// media VOD acceleration.
	ServiceType string `pulumi:"serviceType"`
	// Tags of cdn domain.
	Tags map[string]interface{} `pulumi:"tags"`
}

// The set of arguments for constructing a Domain resource.
type DomainArgs struct {
	// Domain name acceleration region. `mainland`: acceleration inside mainland China, `overseas`: acceleration outside
	// mainland China, `global`: global acceleration. Overseas acceleration service must be enabled to use overseas
	// acceleration and global acceleration.
	Area pulumi.StringPtrInput
	// Name of the acceleration domain.
	Domain pulumi.StringInput
	// Whether to enable full-path cache. Default value is `true`.
	FullUrlCache pulumi.BoolPtrInput
	// HTTPS acceleration configuration. It's a list and consist of at most one item.
	HttpsConfig DomainHttpsConfigPtrInput
	// ipv6 access configuration switch. Only available when area set to `mainland`. Valid values are `on` and `off`. Default
	// value is `off`.
	Ipv6AccessSwitch pulumi.StringPtrInput
	// Origin server configuration. It's a list and consist of at most one item.
	Origin DomainOriginInput
	// The project CDN belongs to, default to 0.
	ProjectId pulumi.IntPtrInput
	// Sharding back to source configuration switch. Valid values are `on` and `off`. Default value is `on`.
	RangeOriginSwitch pulumi.StringPtrInput
	// Request header configuration. It's a list and consist of at most one item.
	RequestHeader DomainRequestHeaderPtrInput
	// Advanced path cache configuration.
	RuleCaches DomainRuleCachArrayInput
	// Acceleration domain name service type. `web`: static acceleration, `download`: download acceleration, `media`: streaming
	// media VOD acceleration.
	ServiceType pulumi.StringInput
	// Tags of cdn domain.
	Tags pulumi.MapInput
}

func (DomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*domainArgs)(nil)).Elem()
}

type DomainInput interface {
	pulumi.Input

	ToDomainOutput() DomainOutput
	ToDomainOutputWithContext(ctx context.Context) DomainOutput
}

func (*Domain) ElementType() reflect.Type {
	return reflect.TypeOf((**Domain)(nil)).Elem()
}

func (i *Domain) ToDomainOutput() DomainOutput {
	return i.ToDomainOutputWithContext(context.Background())
}

func (i *Domain) ToDomainOutputWithContext(ctx context.Context) DomainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainOutput)
}

// DomainArrayInput is an input type that accepts DomainArray and DomainArrayOutput values.
// You can construct a concrete instance of `DomainArrayInput` via:
//
//          DomainArray{ DomainArgs{...} }
type DomainArrayInput interface {
	pulumi.Input

	ToDomainArrayOutput() DomainArrayOutput
	ToDomainArrayOutputWithContext(context.Context) DomainArrayOutput
}

type DomainArray []DomainInput

func (DomainArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Domain)(nil)).Elem()
}

func (i DomainArray) ToDomainArrayOutput() DomainArrayOutput {
	return i.ToDomainArrayOutputWithContext(context.Background())
}

func (i DomainArray) ToDomainArrayOutputWithContext(ctx context.Context) DomainArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainArrayOutput)
}

// DomainMapInput is an input type that accepts DomainMap and DomainMapOutput values.
// You can construct a concrete instance of `DomainMapInput` via:
//
//          DomainMap{ "key": DomainArgs{...} }
type DomainMapInput interface {
	pulumi.Input

	ToDomainMapOutput() DomainMapOutput
	ToDomainMapOutputWithContext(context.Context) DomainMapOutput
}

type DomainMap map[string]DomainInput

func (DomainMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Domain)(nil)).Elem()
}

func (i DomainMap) ToDomainMapOutput() DomainMapOutput {
	return i.ToDomainMapOutputWithContext(context.Background())
}

func (i DomainMap) ToDomainMapOutputWithContext(ctx context.Context) DomainMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainMapOutput)
}

type DomainOutput struct{ *pulumi.OutputState }

func (DomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Domain)(nil)).Elem()
}

func (o DomainOutput) ToDomainOutput() DomainOutput {
	return o
}

func (o DomainOutput) ToDomainOutputWithContext(ctx context.Context) DomainOutput {
	return o
}

// Domain name acceleration region. `mainland`: acceleration inside mainland China, `overseas`: acceleration outside
// mainland China, `global`: global acceleration. Overseas acceleration service must be enabled to use overseas
// acceleration and global acceleration.
func (o DomainOutput) Area() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Domain) pulumi.StringPtrOutput { return v.Area }).(pulumi.StringPtrOutput)
}

// CNAME address of domain name.
func (o DomainOutput) Cname() pulumi.StringOutput {
	return o.ApplyT(func(v *Domain) pulumi.StringOutput { return v.Cname }).(pulumi.StringOutput)
}

// Creation time of domain name.
func (o DomainOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Domain) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Name of the acceleration domain.
func (o DomainOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v *Domain) pulumi.StringOutput { return v.Domain }).(pulumi.StringOutput)
}

// Whether to enable full-path cache. Default value is `true`.
func (o DomainOutput) FullUrlCache() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Domain) pulumi.BoolPtrOutput { return v.FullUrlCache }).(pulumi.BoolPtrOutput)
}

// HTTPS acceleration configuration. It's a list and consist of at most one item.
func (o DomainOutput) HttpsConfig() DomainHttpsConfigOutput {
	return o.ApplyT(func(v *Domain) DomainHttpsConfigOutput { return v.HttpsConfig }).(DomainHttpsConfigOutput)
}

// ipv6 access configuration switch. Only available when area set to `mainland`. Valid values are `on` and `off`. Default
// value is `off`.
func (o DomainOutput) Ipv6AccessSwitch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Domain) pulumi.StringPtrOutput { return v.Ipv6AccessSwitch }).(pulumi.StringPtrOutput)
}

// Origin server configuration. It's a list and consist of at most one item.
func (o DomainOutput) Origin() DomainOriginOutput {
	return o.ApplyT(func(v *Domain) DomainOriginOutput { return v.Origin }).(DomainOriginOutput)
}

// The project CDN belongs to, default to 0.
func (o DomainOutput) ProjectId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Domain) pulumi.IntPtrOutput { return v.ProjectId }).(pulumi.IntPtrOutput)
}

// Sharding back to source configuration switch. Valid values are `on` and `off`. Default value is `on`.
func (o DomainOutput) RangeOriginSwitch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Domain) pulumi.StringPtrOutput { return v.RangeOriginSwitch }).(pulumi.StringPtrOutput)
}

// Request header configuration. It's a list and consist of at most one item.
func (o DomainOutput) RequestHeader() DomainRequestHeaderOutput {
	return o.ApplyT(func(v *Domain) DomainRequestHeaderOutput { return v.RequestHeader }).(DomainRequestHeaderOutput)
}

// Advanced path cache configuration.
func (o DomainOutput) RuleCaches() DomainRuleCachArrayOutput {
	return o.ApplyT(func(v *Domain) DomainRuleCachArrayOutput { return v.RuleCaches }).(DomainRuleCachArrayOutput)
}

// Acceleration domain name service type. `web`: static acceleration, `download`: download acceleration, `media`: streaming
// media VOD acceleration.
func (o DomainOutput) ServiceType() pulumi.StringOutput {
	return o.ApplyT(func(v *Domain) pulumi.StringOutput { return v.ServiceType }).(pulumi.StringOutput)
}

// Acceleration service status.
func (o DomainOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Domain) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Tags of cdn domain.
func (o DomainOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v *Domain) pulumi.MapOutput { return v.Tags }).(pulumi.MapOutput)
}

type DomainArrayOutput struct{ *pulumi.OutputState }

func (DomainArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Domain)(nil)).Elem()
}

func (o DomainArrayOutput) ToDomainArrayOutput() DomainArrayOutput {
	return o
}

func (o DomainArrayOutput) ToDomainArrayOutputWithContext(ctx context.Context) DomainArrayOutput {
	return o
}

func (o DomainArrayOutput) Index(i pulumi.IntInput) DomainOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Domain {
		return vs[0].([]*Domain)[vs[1].(int)]
	}).(DomainOutput)
}

type DomainMapOutput struct{ *pulumi.OutputState }

func (DomainMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Domain)(nil)).Elem()
}

func (o DomainMapOutput) ToDomainMapOutput() DomainMapOutput {
	return o
}

func (o DomainMapOutput) ToDomainMapOutputWithContext(ctx context.Context) DomainMapOutput {
	return o
}

func (o DomainMapOutput) MapIndex(k pulumi.StringInput) DomainOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Domain {
		return vs[0].(map[string]*Domain)[vs[1].(string)]
	}).(DomainOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DomainInput)(nil)).Elem(), &Domain{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainArrayInput)(nil)).Elem(), DomainArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainMapInput)(nil)).Elem(), DomainMap{})
	pulumi.RegisterOutputType(DomainOutput{})
	pulumi.RegisterOutputType(DomainArrayOutput{})
	pulumi.RegisterOutputType(DomainMapOutput{})
}
