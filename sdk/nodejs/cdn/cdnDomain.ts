// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

export class CdnDomain extends pulumi.CustomResource {
    /**
     * Get an existing CdnDomain resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CdnDomainState, opts?: pulumi.CustomResourceOptions): CdnDomain {
        return new CdnDomain(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Cdn/cdnDomain:CdnDomain';

    /**
     * Returns true if the given object is an instance of CdnDomain.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CdnDomain {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CdnDomain.__pulumiType;
    }

    /**
     * Domain name acceleration region. `mainland`: acceleration inside mainland China, `overseas`: acceleration outside
     * mainland China, `global`: global acceleration. Overseas acceleration service must be enabled to use overseas
     * acceleration and global acceleration.
     */
    public readonly area!: pulumi.Output<string | undefined>;
    /**
     * CNAME address of domain name.
     */
    public /*out*/ readonly cname!: pulumi.Output<string>;
    /**
     * Creation time of domain name.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Name of the acceleration domain.
     */
    public readonly domain!: pulumi.Output<string>;
    /**
     * Whether to enable full-path cache. Default value is `true`.
     */
    public readonly fullUrlCache!: pulumi.Output<boolean | undefined>;
    /**
     * HTTPS acceleration configuration. It's a list and consist of at most one item.
     */
    public readonly httpsConfig!: pulumi.Output<outputs.Cdn.CdnDomainHttpsConfig>;
    /**
     * ipv6 access configuration switch. Only available when area set to `mainland`. Valid values are `on` and `off`. Default
     * value is `off`.
     */
    public readonly ipv6AccessSwitch!: pulumi.Output<string | undefined>;
    /**
     * Origin server configuration. It's a list and consist of at most one item.
     */
    public readonly origin!: pulumi.Output<outputs.Cdn.CdnDomainOrigin>;
    /**
     * The project CDN belongs to, default to 0.
     */
    public readonly projectId!: pulumi.Output<number | undefined>;
    /**
     * Sharding back to source configuration switch. Valid values are `on` and `off`. Default value is `on`.
     */
    public readonly rangeOriginSwitch!: pulumi.Output<string | undefined>;
    /**
     * Request header configuration. It's a list and consist of at most one item.
     */
    public readonly requestHeader!: pulumi.Output<outputs.Cdn.CdnDomainRequestHeader>;
    /**
     * Advanced path cache configuration.
     */
    public readonly ruleCaches!: pulumi.Output<outputs.Cdn.CdnDomainRuleCach[] | undefined>;
    /**
     * Acceleration domain name service type. `web`: static acceleration, `download`: download acceleration, `media`: streaming
     * media VOD acceleration.
     */
    public readonly serviceType!: pulumi.Output<string>;
    /**
     * Acceleration service status.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * Tags of cdn domain.
     */
    public readonly tags!: pulumi.Output<{[key: string]: any} | undefined>;

    /**
     * Create a CdnDomain resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CdnDomainArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CdnDomainArgs | CdnDomainState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CdnDomainState | undefined;
            resourceInputs["area"] = state ? state.area : undefined;
            resourceInputs["cname"] = state ? state.cname : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["domain"] = state ? state.domain : undefined;
            resourceInputs["fullUrlCache"] = state ? state.fullUrlCache : undefined;
            resourceInputs["httpsConfig"] = state ? state.httpsConfig : undefined;
            resourceInputs["ipv6AccessSwitch"] = state ? state.ipv6AccessSwitch : undefined;
            resourceInputs["origin"] = state ? state.origin : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["rangeOriginSwitch"] = state ? state.rangeOriginSwitch : undefined;
            resourceInputs["requestHeader"] = state ? state.requestHeader : undefined;
            resourceInputs["ruleCaches"] = state ? state.ruleCaches : undefined;
            resourceInputs["serviceType"] = state ? state.serviceType : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as CdnDomainArgs | undefined;
            if ((!args || args.domain === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domain'");
            }
            if ((!args || args.origin === undefined) && !opts.urn) {
                throw new Error("Missing required property 'origin'");
            }
            if ((!args || args.serviceType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceType'");
            }
            resourceInputs["area"] = args ? args.area : undefined;
            resourceInputs["domain"] = args ? args.domain : undefined;
            resourceInputs["fullUrlCache"] = args ? args.fullUrlCache : undefined;
            resourceInputs["httpsConfig"] = args ? args.httpsConfig : undefined;
            resourceInputs["ipv6AccessSwitch"] = args ? args.ipv6AccessSwitch : undefined;
            resourceInputs["origin"] = args ? args.origin : undefined;
            resourceInputs["projectId"] = args ? args.projectId : undefined;
            resourceInputs["rangeOriginSwitch"] = args ? args.rangeOriginSwitch : undefined;
            resourceInputs["requestHeader"] = args ? args.requestHeader : undefined;
            resourceInputs["ruleCaches"] = args ? args.ruleCaches : undefined;
            resourceInputs["serviceType"] = args ? args.serviceType : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["cname"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CdnDomain.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CdnDomain resources.
 */
export interface CdnDomainState {
    /**
     * Domain name acceleration region. `mainland`: acceleration inside mainland China, `overseas`: acceleration outside
     * mainland China, `global`: global acceleration. Overseas acceleration service must be enabled to use overseas
     * acceleration and global acceleration.
     */
    area?: pulumi.Input<string>;
    /**
     * CNAME address of domain name.
     */
    cname?: pulumi.Input<string>;
    /**
     * Creation time of domain name.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Name of the acceleration domain.
     */
    domain?: pulumi.Input<string>;
    /**
     * Whether to enable full-path cache. Default value is `true`.
     */
    fullUrlCache?: pulumi.Input<boolean>;
    /**
     * HTTPS acceleration configuration. It's a list and consist of at most one item.
     */
    httpsConfig?: pulumi.Input<inputs.Cdn.CdnDomainHttpsConfig>;
    /**
     * ipv6 access configuration switch. Only available when area set to `mainland`. Valid values are `on` and `off`. Default
     * value is `off`.
     */
    ipv6AccessSwitch?: pulumi.Input<string>;
    /**
     * Origin server configuration. It's a list and consist of at most one item.
     */
    origin?: pulumi.Input<inputs.Cdn.CdnDomainOrigin>;
    /**
     * The project CDN belongs to, default to 0.
     */
    projectId?: pulumi.Input<number>;
    /**
     * Sharding back to source configuration switch. Valid values are `on` and `off`. Default value is `on`.
     */
    rangeOriginSwitch?: pulumi.Input<string>;
    /**
     * Request header configuration. It's a list and consist of at most one item.
     */
    requestHeader?: pulumi.Input<inputs.Cdn.CdnDomainRequestHeader>;
    /**
     * Advanced path cache configuration.
     */
    ruleCaches?: pulumi.Input<pulumi.Input<inputs.Cdn.CdnDomainRuleCach>[]>;
    /**
     * Acceleration domain name service type. `web`: static acceleration, `download`: download acceleration, `media`: streaming
     * media VOD acceleration.
     */
    serviceType?: pulumi.Input<string>;
    /**
     * Acceleration service status.
     */
    status?: pulumi.Input<string>;
    /**
     * Tags of cdn domain.
     */
    tags?: pulumi.Input<{[key: string]: any}>;
}

/**
 * The set of arguments for constructing a CdnDomain resource.
 */
export interface CdnDomainArgs {
    /**
     * Domain name acceleration region. `mainland`: acceleration inside mainland China, `overseas`: acceleration outside
     * mainland China, `global`: global acceleration. Overseas acceleration service must be enabled to use overseas
     * acceleration and global acceleration.
     */
    area?: pulumi.Input<string>;
    /**
     * Name of the acceleration domain.
     */
    domain: pulumi.Input<string>;
    /**
     * Whether to enable full-path cache. Default value is `true`.
     */
    fullUrlCache?: pulumi.Input<boolean>;
    /**
     * HTTPS acceleration configuration. It's a list and consist of at most one item.
     */
    httpsConfig?: pulumi.Input<inputs.Cdn.CdnDomainHttpsConfig>;
    /**
     * ipv6 access configuration switch. Only available when area set to `mainland`. Valid values are `on` and `off`. Default
     * value is `off`.
     */
    ipv6AccessSwitch?: pulumi.Input<string>;
    /**
     * Origin server configuration. It's a list and consist of at most one item.
     */
    origin: pulumi.Input<inputs.Cdn.CdnDomainOrigin>;
    /**
     * The project CDN belongs to, default to 0.
     */
    projectId?: pulumi.Input<number>;
    /**
     * Sharding back to source configuration switch. Valid values are `on` and `off`. Default value is `on`.
     */
    rangeOriginSwitch?: pulumi.Input<string>;
    /**
     * Request header configuration. It's a list and consist of at most one item.
     */
    requestHeader?: pulumi.Input<inputs.Cdn.CdnDomainRequestHeader>;
    /**
     * Advanced path cache configuration.
     */
    ruleCaches?: pulumi.Input<pulumi.Input<inputs.Cdn.CdnDomainRuleCach>[]>;
    /**
     * Acceleration domain name service type. `web`: static acceleration, `download`: download acceleration, `media`: streaming
     * media VOD acceleration.
     */
    serviceType: pulumi.Input<string>;
    /**
     * Tags of cdn domain.
     */
    tags?: pulumi.Input<{[key: string]: any}>;
}
